// Code generated by ent, DO NOT EDIT.

package washerprofile

import (
	"the-car-wash-directory/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldLTE(FieldID, id))
}

// ServiceDetails applies equality check predicate on the "service_details" field. It's identical to ServiceDetailsEQ.
func ServiceDetails(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldEQ(FieldServiceDetails, v))
}

// Availability applies equality check predicate on the "availability" field. It's identical to AvailabilityEQ.
func Availability(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldEQ(FieldAvailability, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldEQ(FieldUpdatedAt, v))
}

// ServiceDetailsEQ applies the EQ predicate on the "service_details" field.
func ServiceDetailsEQ(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldEQ(FieldServiceDetails, v))
}

// ServiceDetailsNEQ applies the NEQ predicate on the "service_details" field.
func ServiceDetailsNEQ(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldNEQ(FieldServiceDetails, v))
}

// ServiceDetailsIn applies the In predicate on the "service_details" field.
func ServiceDetailsIn(vs ...string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldIn(FieldServiceDetails, vs...))
}

// ServiceDetailsNotIn applies the NotIn predicate on the "service_details" field.
func ServiceDetailsNotIn(vs ...string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldNotIn(FieldServiceDetails, vs...))
}

// ServiceDetailsGT applies the GT predicate on the "service_details" field.
func ServiceDetailsGT(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldGT(FieldServiceDetails, v))
}

// ServiceDetailsGTE applies the GTE predicate on the "service_details" field.
func ServiceDetailsGTE(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldGTE(FieldServiceDetails, v))
}

// ServiceDetailsLT applies the LT predicate on the "service_details" field.
func ServiceDetailsLT(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldLT(FieldServiceDetails, v))
}

// ServiceDetailsLTE applies the LTE predicate on the "service_details" field.
func ServiceDetailsLTE(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldLTE(FieldServiceDetails, v))
}

// ServiceDetailsContains applies the Contains predicate on the "service_details" field.
func ServiceDetailsContains(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldContains(FieldServiceDetails, v))
}

// ServiceDetailsHasPrefix applies the HasPrefix predicate on the "service_details" field.
func ServiceDetailsHasPrefix(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldHasPrefix(FieldServiceDetails, v))
}

// ServiceDetailsHasSuffix applies the HasSuffix predicate on the "service_details" field.
func ServiceDetailsHasSuffix(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldHasSuffix(FieldServiceDetails, v))
}

// ServiceDetailsIsNil applies the IsNil predicate on the "service_details" field.
func ServiceDetailsIsNil() predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldIsNull(FieldServiceDetails))
}

// ServiceDetailsNotNil applies the NotNil predicate on the "service_details" field.
func ServiceDetailsNotNil() predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldNotNull(FieldServiceDetails))
}

// ServiceDetailsEqualFold applies the EqualFold predicate on the "service_details" field.
func ServiceDetailsEqualFold(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldEqualFold(FieldServiceDetails, v))
}

// ServiceDetailsContainsFold applies the ContainsFold predicate on the "service_details" field.
func ServiceDetailsContainsFold(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldContainsFold(FieldServiceDetails, v))
}

// AvailabilityEQ applies the EQ predicate on the "availability" field.
func AvailabilityEQ(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldEQ(FieldAvailability, v))
}

// AvailabilityNEQ applies the NEQ predicate on the "availability" field.
func AvailabilityNEQ(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldNEQ(FieldAvailability, v))
}

// AvailabilityIn applies the In predicate on the "availability" field.
func AvailabilityIn(vs ...string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldIn(FieldAvailability, vs...))
}

// AvailabilityNotIn applies the NotIn predicate on the "availability" field.
func AvailabilityNotIn(vs ...string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldNotIn(FieldAvailability, vs...))
}

// AvailabilityGT applies the GT predicate on the "availability" field.
func AvailabilityGT(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldGT(FieldAvailability, v))
}

// AvailabilityGTE applies the GTE predicate on the "availability" field.
func AvailabilityGTE(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldGTE(FieldAvailability, v))
}

// AvailabilityLT applies the LT predicate on the "availability" field.
func AvailabilityLT(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldLT(FieldAvailability, v))
}

// AvailabilityLTE applies the LTE predicate on the "availability" field.
func AvailabilityLTE(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldLTE(FieldAvailability, v))
}

// AvailabilityContains applies the Contains predicate on the "availability" field.
func AvailabilityContains(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldContains(FieldAvailability, v))
}

// AvailabilityHasPrefix applies the HasPrefix predicate on the "availability" field.
func AvailabilityHasPrefix(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldHasPrefix(FieldAvailability, v))
}

// AvailabilityHasSuffix applies the HasSuffix predicate on the "availability" field.
func AvailabilityHasSuffix(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldHasSuffix(FieldAvailability, v))
}

// AvailabilityIsNil applies the IsNil predicate on the "availability" field.
func AvailabilityIsNil() predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldIsNull(FieldAvailability))
}

// AvailabilityNotNil applies the NotNil predicate on the "availability" field.
func AvailabilityNotNil() predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldNotNull(FieldAvailability))
}

// AvailabilityEqualFold applies the EqualFold predicate on the "availability" field.
func AvailabilityEqualFold(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldEqualFold(FieldAvailability, v))
}

// AvailabilityContainsFold applies the ContainsFold predicate on the "availability" field.
func AvailabilityContainsFold(v string) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldContainsFold(FieldAvailability, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.WasherProfile {
	return predicate.WasherProfile(sql.FieldLTE(FieldUpdatedAt, v))
}

// HasOwner applies the HasEdge predicate on the "owner" edge.
func HasOwner() predicate.WasherProfile {
	return predicate.WasherProfile(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, OwnerTable, OwnerColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasOwnerWith applies the HasEdge predicate on the "owner" edge with a given conditions (other predicates).
func HasOwnerWith(preds ...predicate.User) predicate.WasherProfile {
	return predicate.WasherProfile(func(s *sql.Selector) {
		step := newOwnerStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.WasherProfile) predicate.WasherProfile {
	return predicate.WasherProfile(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.WasherProfile) predicate.WasherProfile {
	return predicate.WasherProfile(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.WasherProfile) predicate.WasherProfile {
	return predicate.WasherProfile(sql.NotPredicates(p))
}
